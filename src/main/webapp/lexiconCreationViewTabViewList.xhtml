<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">

    <h:form id="lexiconCreationTabViewForm">

        <p:panel id="tabViewPanel" styleClass="lexiconTabViewPanel" header="Multilingual Lexicon" 
                 widgetVar="languageHeader" style="margin-bottom:20px; overflow: hidden; min-width: 460px;">

            <p:tabView id="tabView" widgetVar="EditDictionaryTabView" activeIndex="#{lexiconCreationControllerTabViewList.activeTab}" styleClass="lexiconTabView">
                <p:tab id="tabViewLemma" >

                    <f:facet name="title">
                        <h:outputText id="LemmaCorrTabTitle" value="#{lexiconCreationControllerTabViewList.lemmaCorrTabTitle}"/>
                    </f:facet>

                    <h:panelGrid id="lemmaGrid" columns="4" style="padding-top: 10px;" rendered="#{lexiconCreationControllerTabViewList.enabledFilter}">
                        <p:inputText id="lemmaFilter" value="#{lexiconCreationControllerTabViewList.lemmaField}">
                            <p:ajax event="keyup" listener="#{lexiconCreationControllerTabViewList.lemmaKeyupFilterEvent}" 
                                    update="lexiconCreationTabViewForm:tabView:lemmaTree lexiconCreationTabViewForm:tabView:lemmaFilterLabel" />
                        </p:inputText>
                        <p:watermark id="lemmaFilterWatermark" class="filterLabel" for="lemmaFilter" value="Search for lemma"/>
                        <p:commandButton icon="ui-icon-refresh" actionListener="#{lexiconCreationControllerTabViewList.searchReset('Lemma')}"
                                         onstart="PF('loadingDialog').show()" oncomplete="PF('loadingDialog').hide()" title="Refresh lemmas list"
                                         update="lexiconCreationTabViewForm:tabView:lemmaTree lexiconCreationTabViewForm:tabView:lemmaGrid"/>
                        <p:outputLabel id="lemmaFilterLabel" value="#{lexiconCreationControllerTabViewList.lemmaCounter}" 
                                       styleClass="filterLabel" for="lemmaFilter"/>
                    </h:panelGrid>
                    <p:separator style="border: 0;clear: both;padding: 0.4%;background-color: white"/>

                    <ui:include src="/lexiconCreationViewLemmaFilter.xhtml"/>
                    <p:scrollPanel  id="scrollPanelLemmaTree" mode="native"  styleClass="roundedBox">
                        <p:tree id="lemmaTree" value="#{lexiconCreationControllerTabViewList.lemmaRoot}" var="lemma" selectionMode="single" style="width: 100%;"
                                selection="#{lexiconCreationControllerTabViewList.selection}">
                            <p:ajax event="select" listener="#{lexiconCreationControllerTabViewList.onSelect}"
                                    onstart="PF('loadingDialog').show()" oncomplete="setHeight();PF('loadingDialog').hide()"
                                    update=":editViewTab :systemMessage" >
                            </p:ajax>
                            <f:attribute name="LexicalEntryType" value="Lemma" />
                            <p:treeNode id="treeNodeLemma" >
                                <span class="colorCircle" style="background-color:#990000;"/>
                                <h:outputText styleClass="#{lemma.verified ? 'colorCircleTextLemmaVerified' : 'colorCircleText'}" value="#{lemma.name}"/>
                                <span>
                                    <h:outputText style="font-style: italic; #{lexiconCreationControllerTabViewList.getLanguageColor(lemma.language)}" value="@#{lemma.language}"/>
                                    <h:outputText style="font-style: italic; color: darkgray;" value="(#{lemma.info})" 
                                                  rendered="#{lemma.info.equals('corpusExternalLemma') or lemma.info.equals('reconstructedForm')  or lemma.info.equals('hypoteticalForm')}"/>
                                </span>

                            </p:treeNode>
                        </p:tree>
                    </p:scrollPanel>
                </p:tab>
                <p:tab title="Variant" id="tabViewVariant">
                    <h:panelGrid id="formGrid" columns="4" style="padding-top: 10px;" 
                                 rendered="#{lexiconCreationControllerTabViewList.enabledFilter and lexiconCreationControllerTabViewList.lemmaCorrTabTitle.equals('Lemma')}">
                        <p:inputText id="formFilter" value="#{lexiconCreationControllerTabViewList.formField}">
                            <p:ajax event="keyup" listener="#{lexiconCreationControllerTabViewList.formKeyupFilterEvent}" 
                                    update="lexiconCreationTabViewForm:tabView:formTree lexiconCreationTabViewForm:tabView:formFilterLabel" />
                        </p:inputText>
                        <p:watermark id="formFilterWatermark" class="filterLabel" for="formFilter" value="Search for variant"/>                        
                        <p:commandButton icon="ui-icon-refresh" actionListener="#{lexiconCreationControllerTabViewList.searchReset('Form')}" 
                                         onstart="PF('loadingDialog').show()" oncomplete="PF('loadingDialog').hide()" title="Refresh variants list"
                                         update="lexiconCreationTabViewForm:tabView:formTree lexiconCreationTabViewForm:tabView:formGrid"/>
                        <p:outputLabel id="formFilterLabel" value="#{lexiconCreationControllerTabViewList.formCounter}" styleClass="filterLabel" for="formFilter"/>
                    </h:panelGrid>
                    <p:separator style="border: 0;clear: both;padding: 0.4%;background-color: white"/>

                    <ui:include src="/lexiconCreationViewFormFilter.xhtml"/>
                    <p:scrollPanel  id="scrollPanelFormTree" mode="native" style="overflow-x: hidden; overflow-y: auto;" styleClass="roundedBox">
                        <p:tree id="formTree" value="#{lexiconCreationControllerTabViewList.formRoot}" var="form" selectionMode="single" 
                                selection="#{lexiconCreationControllerTabViewList.selection}">
                            <p:ajax event="select" listener="#{lexiconCreationControllerTabViewList.onSelect}"
                                    onstart="PF('loadingDialog').show()" oncomplete="PF('loadingDialog').hide()"
                                    update=":editViewTab:lexiconCreationFormDetailForm :editViewTab:lexiconCreationSenseDetailForm
                                    :editViewTab:lexiconCreationRelationDetailForm :editViewTab:lexiconCreationIntExtAttDetailForm :systemMessage"/>
                            <f:attribute name="LexicalEntryType" value="Form" />
                            <p:treeNode>
                                <span class="colorCircle" style="background-color:#7286ad" />
                                <h:outputText styleClass="#{form.verified ? 'colorCircleTextVariantVerified' : 'colorCircleText'}" value="#{form.name}"/>
                                <span>
                                    <h:outputText style="font-style: italic; #{lexiconCreationControllerTabViewList.getLanguageColor(form.language)}" value="@#{form.language}"/>
                                </span>
                            </p:treeNode>
                        </p:tree>
                    </p:scrollPanel>
                </p:tab>
                <p:tab title="Document" id="tabViewDocument">
                    <h:panelGrid id="docGrid" columns="4" style="padding-top: 10px;" rendered="#{lexiconCreationControllerTabViewList.enabledFilter}">
                        <p:inputText id="docFilter" value="#{lexiconCreationControllerTabViewList.docField}">
                            <p:ajax event="keyup" listener="#{lexiconCreationControllerTabViewList.docKeyupFilterEvent}"                                     
                                    update="lexiconCreationTabViewForm:tabView:docTree lexiconCreationTabViewForm:tabView:docFilterLabel
                                    docFilterPanel docFilterPanel21 docFilterPanel22" />
                        </p:inputText>
                        <p:watermark id="docFilterWatermark" class="filterLabel" for="docFilter" value="Search for document"/>
                        <p:commandButton icon="ui-icon-refresh" actionListener="#{lexiconCreationControllerTabViewList.searchReset('Document')}"
                                         onstart="PF('loadingDialog').show()" oncomplete="PF('loadingDialog').hide()" title="Refresh documents list"
                                         update="lexiconCreationTabViewForm:tabView:docTree lexiconCreationTabViewForm:tabView:docGrid
                                         lexiconCreationTabViewForm:tabView:docFilterLabel docFilterPanel docFilterPanel21 docFilterPanel22"/>
                        <p:outputLabel id="docFilterLabel" value="#{lexiconCreationControllerTabViewList.docCounter}" styleClass="filterLabel" for="docFilter"/>
                    </h:panelGrid>
                    <p:separator style="border: 0;clear: both;padding: 0.4%;background-color: white"/>

                    <ui:include src="/lexiconCreationViewDocumentFilter.xhtml"/>
                    <p:scrollPanel  id="scrollPanelDocTree" mode="native" style="overflow-x: hidden; overflow-y: auto;" styleClass="roundedBox">
                        <p:tree id="docTree" value="#{lexiconCreationControllerTabViewList.docRoot}" var="doc" selectionMode="single"
                                selection="#{lexiconCreationControllerTabViewList.selection}">
                            <p:ajax event="select" listener="#{lexiconCreationControllerTabViewList.onDocumentationSelect}"
                                    onstart="PF('loadingDialog').show()" oncomplete="PF('loadingDialog').hide()"
                                    update=":editViewTab:lexiconCreationFormDetailForm :editViewTab:lexiconCreationDocumentationDetailForm :editViewTab:lexiconCreationSenseDetailForm
                                    :editViewTab:lexiconCreationRelationDetailForm :editViewTab:lexiconCreationIntExtAttDetailForm :systemMessage"/>
                            <f:attribute name="Documentation" value="Document" />
                            <p:treeNode>
                                <span class="colorCircle" style="background-color:#248f24" />
                                <h:outputText id="docNodeName" styleClass="colorCircleText" value="#{doc.abbreviation}"/>
                                <span>
                                    <h:outputText style="font-style: italic; color: darkgreen" value="#{doc.type.equals('Manuscript') ? '[' : '['.concat(doc.sourceType) }"/>
                                    <h:outputText style="font-style: italic; font-weight: bold; color: darkgreen" value=" #{doc.type}]"/>
                                </span>
                            </p:treeNode>
                        </p:tree>
                    </p:scrollPanel>
                </p:tab>

                <p:tab title="Attestation" id="tabViewAttestation" >
                    <h:panelGrid id="attGrid" columns="4" style="padding-top: 10px;" rendered="#{lexiconCreationControllerTabViewList.enabledFilter}">
                        <p:inputText id="attFilter" value="#{lexiconCreationControllerTabViewList.attField}">
                            <p:ajax event="keyup" listener="#{lexiconCreationControllerTabViewList.attKeyupFilterEvent}"                                     
                                    update="lexiconCreationTabViewForm:tabView:attTree lexiconCreationTabViewForm:tabView:attFilterLabel
                                    attFilterPanel attFilterPanel22" />
                        </p:inputText>
                        <p:watermark id="attFilterWatermark" class="filterLabel" for="attFilter" value="Search for attestation"/>
                        <p:commandButton icon="ui-icon-refresh" actionListener="#{lexiconCreationControllerTabViewList.searchReset('Attestation')}"
                                         onstart="PF('loadingDialog').show()" oncomplete="PF('loadingDialog').hide()" title="Refresh attestations list"
                                         update="lexiconCreationTabViewForm:tabView:attTree lexiconCreationTabViewForm:tabView:attGrid"/>
                        <p:outputLabel id="attFilterLabel" value="#{lexiconCreationControllerTabViewList.attCounter}" styleClass="filterLabel" for="attFilter"/>
                    </h:panelGrid>
                    <p:separator style="border: 0;clear: both;padding: 0.4%;background-color: white"/>

                    <ui:include src="/lexiconCreationViewAttestationFilter.xhtml"/>
                    <p:scrollPanel  id="scrollPanelAttTree" mode="native" style="overflow-x: hidden; overflow-y: auto;" styleClass="roundedBox">
                        <p:tree id="attTree" value="#{lexiconCreationControllerTabViewList.attRoot}" var="att" selectionMode="single"
                                selection="#{lexiconCreationControllerTabViewList.selection}">
                            <p:ajax event="select" listener="#{lexiconCreationControllerTabViewList.onAttestationSelect}"
                                    onstart="PF('loadingDialog').show()" oncomplete="PF('loadingDialog').hide()"
                                    update=":editViewTab:lexiconCreationFormDetailForm :editViewTab:lexiconCreationDocumentationDetailForm :editViewTab:lexiconCreationSenseDetailForm
                                    :editViewTab:lexiconCreationRelationDetailForm :editViewTab:lexiconCreationIntExtAttDetailForm :systemMessage"/>
                            <f:attribute name="Attestation" value="Attestation" />
                            <p:treeNode>
                                <span class="colorCircle" style="background-color:#002F80" />
                                <h:outputText styleClass="#{lexiconCreationControllerTabViewList.getAttestationLabelStyleClass(att)}" value="#{att.attestationUriLemma} - "/>
                                <h:outputText id="attNodeName" styleClass="colorCircleText" value="#{lexiconCreationControllerTabViewList.getAttestationLabel(att)}"/>
                                <h:outputText style="font-style: italic; font-weight: bold; color: darkblue" value=" [#{att.type.equals('Internal') ? 'Int' : 'Ext'}]"/>
                            </p:treeNode>
                        </p:tree>
                    </p:scrollPanel>
                </p:tab>                

                <p:tab title="Ontology" id="tabViewOntology">
                    <p:separator style="border: 0;clear: both;padding: 0.4%;background-color: white"/>
                    <ui:include src="/lexiconCreationViewOntologyFilter.xhtml"/>
                    <p:separator style="border: 0;clear: both;padding: 0.4%;background-color: white"/>
                    <p:scrollPanel  id="scrollPanelOntologyTree" mode="native" style="overflow-x: hidden; overflow-y: auto;" styleClass="roundedBox">
                        <p:tree id="ontoTree" value="#{lexiconCreationControllerTabViewList.ontoRoot}" var="ontoClass" selectionMode="single"
                                selection="#{lexiconCreationControllerTabViewList.selection}" >
                            <p:ajax event="select" listener="#{lexiconCreationControllerTabViewList.onOntoSelect}"
                                    onstart="PF('loadingDialog').show()" oncomplete="PF('loadingDialog').hide()"
                                    update=":editViewTab:lexiconCreationFormDetailForm 
                                    :editViewTab:lexiconCreationSenseDetailForm :editViewTab:lexiconCreationDocumentationDetailForm
                                    :editViewTab:domainOntologyDetailForm
                                    :editViewTab:lexiconCreationIntExtAttDetailForm :systemMessage"/>
                            
                            <f:attribute name="Onto" value="Onto"/>
                            <p:treeNode>
                                <span class="colorCircle" style="background-color:#C0C0C0;"/>
                                <h:outputText styleClass="colorCircleText" value="#{ontoClass.name}"/>
                            </p:treeNode>
                        </p:tree>
                    </p:scrollPanel>
                </p:tab>
            </p:tabView>
        </p:panel>

    </h:form> 
</ui:composition>
